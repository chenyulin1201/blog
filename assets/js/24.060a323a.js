(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{429:function(t,a,s){"use strict";s.r(a);var n=s(11),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"for-in的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in的特点"}},[t._v("#")]),t._v(" for...in的特点")]),t._v(" "),a("ul",[a("li",[t._v("for...in 遍历对象返回的是对象的key值，遍历数组返回的是元素的下标")]),t._v(" "),a("li",[t._v("for...in 还会遍历原型上的值和手动添加的其他键")]),t._v(" "),a("li",[t._v("for...in 遍历出来的顺序可能跟实际数组的内部顺序不一致")]),t._v(" "),a("li",[t._v("for...in 遍历数组的话 因为遍历的是下标，但是要注意的是遍历的key虽为下标，但是是字符串类型")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果想只遍历出自身身上的属性的话可以用hasOwnProperty方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"for-of的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-of的特点"}},[t._v("#")]),t._v(" for...of的特点")]),t._v(" "),a("ul",[a("li",[t._v("for...of 遍历对象会报错")]),t._v(" "),a("li",[t._v("for...of 遍历的是键值对中的值，也就是说遍历数组的话遍历的是它的值")])]),t._v(" "),a("blockquote",[a("p",[t._v("for of不同于forEach，它可以和breakcontinue和return配合使用，forEach只能使用return结束一整个结束")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 如果for...of想遍历对象的话可以使用Object.keys(obj)\nfor (var attrName of Object.keys(obj)){\n  console.log(attrName); // 打印的是对象属性名\n}\n")])])]),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("for in常用于遍历对象，遍历数组不建议，因为不能保证按照数组的内部实际顺序进行遍历的")]),t._v(" "),a("p",[t._v("for of常用于遍历数组，遍历普通对象直接报错了")])])}),[],!1,null,null,null);a.default=r.exports}}]);